#ifndef SOURCE_H
#define SOURCE_H

#include <map>
#include <vector>

namespace CHAR {
	enum CHAR;
}
class FontChar;

extern int FontX;
extern int FontY;
extern FontChar fontChar;

class FontChar {
private:
public:
	std::map<CHAR::CHAR, std::vector<std::vector<bool>> > ASCIIFont;
	std::vector<unsigned char> ASCIIChar;
	std::map<CHAR::CHAR, unsigned char> ASCIIBrightness;
	std::map<CHAR::CHAR, std::vector<unsigned short>> ASCIIHistogram;

	FontChar();
	int size();
};

namespace CHAR {
	enum CHAR {
		EMPTY = 0,
		SMILE,
		SMILE_INVERTED,
		HEART, DIAMONDS,
		CLUBS, SPADES,
		DOT,
		DOT_INVERTED,
		CIRCLE,
		CIRCLE_DOTTED,
		MALE,
		FEMALE,
		NOTE_QUARTER,
		NOTE_EIGHTH,
		LIGHT,
		ARROW2_RIGHT,
		ARROW2_LEFT,
		ARROW_DOUBLE_VERTICAL,
		EXCLAMATION_DOUBLE,
		PILCROW,
		SECTION,
		BLOCK_HALF_LOWER,
		ARROW_DOUBLE_VERTICAL_LINED,
		ARROW_UP,
		ARROW_DOWN,
		ARROW_RIGHT,
		ARROW_LEFT,
		CORNER_LOWERLEFT,
		ARROW_DOUBLE_HORIZONTAL,
		ARROW2_UP,
		ARROW2_DOWN,
		SPACE,
		EXCLAMATION,
		DOUBLE_QUOTE,
		HASHMARK,
		DOLLAR,
		PERCENT,
		AND,
		APOSTROPHE,
		BRACKET_LEFT,
		BRACKET_RIGHT,
		MULTIPLICATION,
		ADDITION,
		COMMA,
		DASH,
		PERIOD,
		SLASH,
		NUM0, NUM1, NUM2, NUM3, NUM4, NUM5, NUM6, NUM7, NUM8, NUM9,
		COLON, SEMICOLON,
		LESS_THAN, EQUAL, GREATER_THAN,
		QUESTION, AT,
		A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z,
		SQUARE_BRACKET_LEFT, BACKSLASH, SQUARE_BRACKET_RIGHT, ROOF, UNDERSCORE,
		APOSTROPHE_INVERTED,
		a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z,
		BRACKETS_CURLY_LEFT, VERTICAL_BAR, BRACKETS_CURLY_RIGHT,
		TILDE, HOUSE,
		EXTENDED_01,
		EXTENDED_02,
		EXTENDED_03,
		EXTENDED_04,
		EXTENDED_05,
		EXTENDED_06,
		EXTENDED_07,
		EXTENDED_08,
		EXTENDED_09,
		EXTENDED_10,
		EXTENDED_11,
		EXTENDED_12,
		EXTENDED_13,
		EXTENDED_14,
		EXTENDED_15,
		EXTENDED_16,
		EXTENDED_17,
		EXTENDED_18,
		EXTENDED_19,
		EXTENDED_20,
		EXTENDED_21,
		EXTENDED_22,
		EXTENDED_23,
		EXTENDED_24,
		EXTENDED_25,
		EXTENDED_26,
		EXTENDED_27,
		EXTENDED_28,
		EXTENDED_29,
		EXTENDED_30,
		EXTENDED_31,
		EXTENDED_32,
		EXTENDED_33,
		EXTENDED_34,
		EXTENDED_35,
		EXTENDED_36,
		EXTENDED_37,
		EXTENDED_38,
		EXTENDED_39,
		EXTENDED_40,
		EXTENDED_41,
		EXTENDED_42,
		EXTENDED_43,
		EXTENDED_44,
		EXTENDED_45,
		EXTENDED_46,
		EXTENDED_47,
		EXTENDED_48,
		EXTENDED_49,
		EXTENDED_50,
		EXTENDED_51,
		EXTENDED_52,
		EXTENDED_53,
		EXTENDED_54,
		EXTENDED_55,
		EXTENDED_56,
		EXTENDED_57,
		EXTENDED_58,
		EXTENDED_59,
		EXTENDED_60,
		EXTENDED_61,
		EXTENDED_62,
		EXTENDED_63,
		EXTENDED_64,
		EXTENDED_65,
		EXTENDED_66,
		EXTENDED_67,
		EXTENDED_68,
		EXTENDED_69,
		EXTENDED_70,
		EXTENDED_71,
		EXTENDED_72,
		EXTENDED_73,
		EXTENDED_74,
		EXTENDED_75,
		EXTENDED_76,
		EXTENDED_77,
		EXTENDED_78,
		EXTENDED_79,
		EXTENDED_80,
		EXTENDED_81,
		EXTENDED_82,
		EXTENDED_83,
		EXTENDED_84,
		EXTENDED_85,
		EXTENDED_86,
		EXTENDED_87,
		EXTENDED_88,
		EXTENDED_89,
		EXTENDED_90,
		EXTENDED_91,
		EXTENDED_92,
		EXTENDED_93,
		EXTENDED_94,
		EXTENDED_95,
		EXTENDED_96,
		EXTENDED_97,
		EXTENDED_98,
		EXTENDED_99
	};
}

#endif